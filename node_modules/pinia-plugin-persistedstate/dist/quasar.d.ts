import * as pinia from 'pinia';
import { Cookies, SessionStorage, LocalStorage } from 'quasar';
import { P as PersistedStateFactoryOptions } from './types-374a3a36.js';

declare type CookieOptions = Parameters<Cookies['set']>[2];
declare type PersistedStateQuasarFactoryOptions = Omit<PersistedStateFactoryOptions, 'storage'> & {
    cookiesOptions: CookieOptions;
};
/**
 * Creates a Quasar-specific SSR-ready pinia persistence plugin based on cookies
 * @param cookies pass the imported Cookies from 'quasar'
 * @param ssrContext SSR context destructured from boot/store wrapper callback
 * @param factoryOptions global persistence options
 * @returns pinia plugin
 */
declare function createQuasarCookiesPersistedState(cookies: Cookies, ssrContext: unknown, factoryOptions?: PersistedStateQuasarFactoryOptions): pinia.PiniaPlugin;
/**
 * Creates a Quasar-specific pinia persistence plugin based on Quasar WebStorage plugins
 * @param webStorage pass the imported SessionStorage/LocalStorage from 'quasar'
 * @param factoryOptions global persistence options
 * @returns pinia plugin
 */
declare function createQuasarWebStoragePersistedState(webStorage: SessionStorage | LocalStorage, factoryOptions?: PersistedStateQuasarFactoryOptions): pinia.PiniaPlugin;

export { PersistedStateQuasarFactoryOptions, createQuasarCookiesPersistedState, createQuasarWebStoragePersistedState };
